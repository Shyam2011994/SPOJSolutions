#include<iostream>
#include<algorithm>
#include<cstring>
#include <cstdio>
using namespace std;
typedef long long llong;
const int MAXN = 500020;
int tr[MAXN];
llong read(int idx){
	llong sum=0;
	while(idx>0){
		sum+=tr[idx];
		idx-=(idx & -idx);
	}
	return sum;
}
void update(int idx ,llong val,int n){
 while (idx<=n){
  tr[idx]+=val;
  idx+=(idx & -idx);
 }
}
int main(){
	int t;
	cin>>t;
	while(t--){
		int n;
		cin>>n;
		int a[n],b[n],t[n];
		for(int i=0;i<n;i++){
			cin>>a[i];
			b[i]=a[i];
		}
		sort(b,b+n);
		memset(tr,0,MAXN);
		for(int i=0;i<n;i++)
			a[i]=1+int(lower_bound(b,b+n,a[i])-b);
		llong inv_count = 0;
		for(int i=n-1;i>=0;--i){
         llong x=read(a[i]-1);
         inv_count+=x;
         update(a[i], 1,n);
      }
      cout<<inv_count<<endl;
	}
	return 0;
}
