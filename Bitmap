#include<iostream>
#include<vector>
#include<map>
#include<limits.h>
#include<queue>
#define INF 10000
using namespace std;
int a[190][190];
int m,n;
void BFS(int i,int j){
	queue<int> q;
	q.push(i);
	q.push(j);
	a[i][j]=0;
	while(!q.empty()){
		int x=q.front();
		q.pop();
		int y=q.front();
		q.pop();
		int d=a[x][y]+1;
		if(y-1>=0 && d<a[x][y-1]){
			q.push(x);
			q.push(y-1);
			a[x][y-1]=d;
		}
		if(y+1<n && d<a[x][y+1])
		{
			q.push(x);
			q.push(y+1);
			a[x][y+1]= d;
		}
		//up
		if(x-1>=0 && d<a[x-1][y])
		{
			q.push(x-1);
			q.push(y);
			a[x-1][y]= d;
		}

		//down
		if(x+1<m && d<a[x+1][y])
		{
			q.push(x+1);
			q.push(y);
			a[x+1][y]= d;
		}
	}
}
int main(){
	int te;
	char x;
    cin>>te;
	while(te--){
		vector<pair <int,int> > vc;
		cin>>m>>n;
		for(int i=0;i<m;i++){
			for(int j=0;j<n;j++){
			cin>>x;
			if(x=='1'){
			a[i][j]=-INF;
			vc.push_back(make_pair(i,j));
		}
		else
				a[i][j]=INF;
			}
		}
		for(int i=0;i<vc.size();i++)
			BFS(vc[i].first,vc[i].second);

		for(int i=0;i<m;i++)
		{
			for(int j=0;j<n;j++)
				cout<<a[i][j]<<" ";
			cout<<endl;
		}
		cout<<endl;
	}
	return 0;
}
